// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WepAPIPOCWithEF.Data;

namespace WepAPIPOCWithEF.Data.Migrations
{
    [DbContext(typeof(WebAPIPOCWithEFContext))]
    partial class WebAPIPOCWithEFContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("WebAPIPOCWithEF.Domain.Cart", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CartName")
                        .HasMaxLength(10);

                    b.Property<long>("CustomerId");

                    b.Property<DateTime?>("DateAdded");

                    b.Property<DateTime?>("DateModified");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("WebAPIPOCWithEF.Domain.CartDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("CartId");

                    b.Property<DateTime?>("DateAdded");

                    b.Property<DateTime?>("DateModified");

                    b.Property<decimal>("Price");

                    b.Property<long>("ProductID");

                    b.Property<decimal>("Quantity");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductID");

                    b.ToTable("CartDetails");
                });

            modelBuilder.Entity("WebAPIPOCWithEF.Domain.Customer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DateAdded");

                    b.Property<DateTime?>("DateModified");

                    b.Property<string>("Email")
                        .HasMaxLength(100);

                    b.Property<string>("FirstName")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("WebAPIPOCWithEF.Domain.Order", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("CustomerId");

                    b.Property<DateTime?>("DateAdded");

                    b.Property<DateTime?>("DateModified");

                    b.Property<int>("OrderStatus");

                    b.Property<decimal>("TotalOrderAmount");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("WebAPIPOCWithEF.Domain.OrderDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DateAdded");

                    b.Property<DateTime?>("DateModified");

                    b.Property<decimal>("Discount");

                    b.Property<long>("OrderID");

                    b.Property<decimal>("Price");

                    b.Property<long>("ProductID");

                    b.Property<decimal>("Quantity");

                    b.HasKey("Id");

                    b.HasIndex("OrderID");

                    b.HasIndex("ProductID");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("WebAPIPOCWithEF.Domain.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DateAdded");

                    b.Property<DateTime?>("DateModified");

                    b.Property<string>("Description")
                        .HasMaxLength(50);

                    b.Property<string>("ImagePath")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("WebAPIPOCWithEF.Domain.Cart", b =>
                {
                    b.HasOne("WebAPIPOCWithEF.Domain.Customer")
                        .WithMany("Carts")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebAPIPOCWithEF.Domain.CartDetail", b =>
                {
                    b.HasOne("WebAPIPOCWithEF.Domain.Cart")
                        .WithMany("CartDetails")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebAPIPOCWithEF.Domain.Product", "Product")
                        .WithMany("CartDetails")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebAPIPOCWithEF.Domain.Order", b =>
                {
                    b.HasOne("WebAPIPOCWithEF.Domain.Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebAPIPOCWithEF.Domain.OrderDetail", b =>
                {
                    b.HasOne("WebAPIPOCWithEF.Domain.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebAPIPOCWithEF.Domain.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
